syntax = "proto3";

option csharp_namespace = "Service.Grpc";

package profiler_service;

service ProfilerService {
	rpc GetByDiscordId (GetByDiscordIdRequest)
	returns (GetByDiscordIdResponse);

	rpc GetRangeOfProfiles (GetRangeOfProfilesRequest)
	returns (GetRangeOfProfilesResponse);

	rpc CreateProfile (CreateProfileRequest) 
	returns (CreateProfileResponse);

	rpc DeleteUser (DeleteUserRequest)
	returns (DeleteUserResponse);

	rpc DepositPoints (DepositPointsRequest)
	returns (DepositPointsResponse);

	rpc WithdrawPoints (WithdrawPointsRequest)
	returns (WithdrawPointsResponse);

	rpc VerifyWaxWallet (VerifyWaxWalletRequest)
	returns (VerifyWaxWalletResponse);
}

message GetByDiscordIdRequest {
	uint64 discordId = 1;
}

message GetRangeOfProfilesRequest {
	int32 page = 1;
	int32 pageSize = 2;
}

message CreateProfileRequest {
	uint64 discordId = 1;
}

message DeleteUserRequest {
	uint64 discordId = 1;
}

message DepositPointsRequest {
	uint64 discordId = 1;
	double points = 2;
}

message WithdrawPointsRequest {
	uint64 discordId = 1;
	double points = 2;
}

message VerifyWaxWalletRequest {
	uint64 discordId = 1;
	string waxWallet = 2;
}

message GetByDiscordIdResponse {
	Profile profile = 1;
}

// todo refactory
message GetRangeOfProfilesResponse {
	repeated Profile profiles = 1;
}

message CreateProfileResponse {
}

message DeleteUserResponse {
}

message DepositPointsResponse {
	StatusType status = 1;
}

message WithdrawPointsResponse {
	StatusType status = 1;
}

message VerifyWaxWalletResponse {
	StatusType status = 1;
}

enum StatusType {
	STATUS_TYPE_UNSPECIFIED = 0;
	STATUS_TYPE_SUCCESS = 1;
	STATUS_TYPE_FAILED = 2;
}

message Profile {
	uint64 discordId = 1;
	double points = 2;
}